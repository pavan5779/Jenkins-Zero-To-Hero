pipeline {
    agent any
    stages {
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // Build the project and create a JAR file
                sh 'cd /var/lib/jenkins/workspace/My_First_Project/Files && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://172.20.105.186:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'Sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=${SONAR_AUTH_TOKEN} -Dsonar.host.url=${SONAR_URL}"
                }
            }
        }
        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE_TAG = "${BUILD_NUMBER}"
                DOCKER_IMAGE = "pavan5779/ultimate-cicd:${DOCKER_IMAGE_TAG}"
            }
            steps {
                script {
                    sh "cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} ."
                    docker.withRegistry('https://index.docker.io/v1/', "docker") {
                        docker.image("${DOCKER_IMAGE}").push()
                    }
                }
            }
        }
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "pavan5779"
            }
            steps {
                withCredentials([string(credentialsId: 'GitHub', variable: 'GITHUB_TOKEN')]) {
                    sh """
                        git config user.email "pavankalyanmeda5779@gmail.com"
                        git config user.name "pavan5779"
                        sed -i 's/replaceImageTag/${DOCKER_IMAGE_TAG}/g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${DOCKER_IMAGE_TAG}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    """
                }
            }
        }
    }
}
